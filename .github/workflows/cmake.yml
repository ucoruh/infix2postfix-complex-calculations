name: CMake

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up CMake
      uses: actions/setup-cmake@v3
      with:
        cmake-version: '3.18.4'

    - name: Configure project with CMake
      run: cmake -S . -B build

    - name: Build project
      run: cmake --build build

    - name: Run tests
      run: ./build/InfixToPostfixCalculator
      if: matrix.os == 'ubuntu-latest'

    - name: Run tests (Windows)
      run: build\Debug\InfixToPostfixCalculator.exe
      if: matrix.os == 'windows-latest'

    # Executable dosyayı paketleme (Linux)
    - name: Package executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: zip InfixToPostfixCalculator_linux.zip ./build/InfixToPostfixCalculator

    # Executable dosyayı paketleme (Windows)
    - name: Package executable (Windows)
      if: matrix.os == 'windows-latest'
      run: powershell.exe Compress-Archive -Path build\Debug\InfixToPostfixCalculator.exe -DestinationPath InfixToPostfixCalculator_windows.zip

    # Release oluşturma
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.INFIX_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: "Release v1.0.${{ github.run_number }}"
        draft: false
        prerelease: false

    # Linux için release dosyasını yükleme
    - name: Upload Release Asset (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.INFIX_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./InfixToPostfixCalculator_linux.zip
        asset_name: InfixToPostfixCalculator_linux.zip
        asset_content_type: application/zip

    # Windows için release dosyasını yükleme
    - name: Upload Release Asset (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.INFIX_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./InfixToPostfixCalculator_windows.zip
        asset_name: InfixToPostfixCalculator_windows.zip
        asset_content_type: application/zip
